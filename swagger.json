{
  "openapi": "3.0.0",
  "info": {
    "title": "API Superhéroes - Sistema de Batallas por Equipos",
    "version": "4.0.0",
    "description": "API para gestión de superhéroes, villanos y batallas por equipos con persistencia en MongoDB Atlas. **Nueva versión con autenticación JWT**: cada usuario tiene sus propias batallas privadas. Los endpoints de batalla requieren autenticación con token Bearer. Incluye sistema de turnos, IDs únicos, barras de poder/defensa, y validaciones mejoradas para batallas estratégicas."
  },
  "tags": [
    { "name": "Autenticación", "description": "Registro, login y gestión de usuarios con JWT" },
    { "name": "Heroes", "description": "Operaciones CRUD de héroes con persistencia en MongoDB" },
    { "name": "Villanos", "description": "Operaciones CRUD de villanos con persistencia en MongoDB" },
    { "name": "Batallas", "description": "Sistema de batallas por equipos con turnos, privadas por usuario" },
    { "name": "Enfrentamientos", "description": "Historial de enfrentamientos individuales guardados en MongoDB" }
  ],
  "servers": [
    {
      "url": "http://localhost:3001",
      "description": "Servidor local"
    }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Autenticación"],
        "summary": "Registrar nuevo usuario",
        "description": "Crea una nueva cuenta de usuario con email y contraseña",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string", "example": "usuario1" },
                  "email": { "type": "string", "format": "email", "example": "usuario@email.com" },
                  "password": { "type": "string", "minLength": 6, "example": "password123" }
                },
                "required": ["username", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Usuario registrado exitosamente",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "username": { "type": "string" },
                        "email": { "type": "string" }
                      }
                    },
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "400": { "description": "Error de validación o usuario ya existe" }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Autenticación"],
        "summary": "Iniciar sesión",
        "description": "Autentica un usuario y devuelve un token JWT",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "format": "email", "example": "usuario@email.com" },
                  "password": { "type": "string", "example": "password123" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "username": { "type": "string" },
                        "email": { "type": "string" }
                      }
                    },
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": { "description": "Credenciales inválidas" }
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "tags": ["Autenticación"],
        "summary": "Obtener perfil del usuario autenticado",
        "description": "Devuelve la información del usuario autenticado",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Perfil del usuario",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "string" },
                        "username": { "type": "string" },
                        "email": { "type": "string" },
                        "createdAt": { "type": "string", "format": "date-time" }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": { "description": "Token no válido o expirado" }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Autenticación"],
        "summary": "Cerrar sesión",
        "description": "Cierra la sesión del usuario (solo confirmación, el token expira naturalmente)",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Logout exitoso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "message": { "type": "string" }
                  }
                }
              }
            }
          }
        }
      }
    },

    "/api/batallas/{batallaId}/activar-superataque": {
      "post": {
        "tags": ["Batallas"],
        "summary": "Activar superataque para un personaje",
        "description": "Activa el superataque de un personaje si su barra de poder está llena (100). El siguiente ataque de este personaje hará el doble de daño. **Requiere autenticación y ser dueño de la batalla.**",
        "security": [{"bearerAuth": []}],
        "parameters": [
          { "name": "batallaId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "personajeId": { "type": "string", "description": "ID único del personaje (ej: H1, V2)", "example": "H1" }
                },
                "required": ["personajeId"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Superataque activado", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BatallaResponse" } } } },
          "400": { "description": "Error al activar superataque", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } } }
        }
      }
    },
    "/api/batallas/{batallaId}/activar-superdefensa": {
      "post": {
        "tags": ["Batallas"],
        "summary": "Activar superdefensa para un personaje",
        "description": "Activa la superdefensa de un personaje si su barra de defensa está llena (100). El siguiente golpe recibido por este personaje le hará la mitad de daño.",
        "parameters": [
          { "name": "batallaId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "personajeId": { "type": "string", "description": "ID único del personaje (ej: H1, V2)", "example": "H1" }
                },
                "required": ["personajeId"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Superdefensa activada", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/BatallaResponse" } } } },
          "400": { "description": "Error al activar superdefensa", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ErrorResponse" } } } }
        }
      }
    },
    "/api/heroes": {
      "get": {
        "tags": ["Heroes"],
        "summary": "Obtener todos los héroes",
        "description": "Obtiene la lista completa de héroes desde MongoDB Atlas",
        "responses": {
          "200": {
            "description": "Lista de héroes obtenida desde MongoDB",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Hero" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Heroes"],
        "summary": "Agregar un nuevo héroe",
        "description": "Crea un nuevo héroe y lo guarda en MongoDB Atlas",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Hero" }
            }
          }
        },
        "responses": {
          "201": { "description": "Héroe creado y guardado en MongoDB" },
          "400": { "description": "Datos inválidos" }
        }
      }
    },
    "/api/heroes/{id}": {
      "put": {
        "tags": ["Heroes"],
        "summary": "Actualizar un héroe",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Hero" }
            }
          }
        },
        "responses": {
          "200": { "description": "Héroe actualizado" },
          "404": { "description": "Héroe no encontrado" }
        }
      },
      "delete": {
        "tags": ["Heroes"],
        "summary": "Eliminar un héroe",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Héroe eliminado" },
          "404": { "description": "Héroe no encontrado" }
        }
      }
    },
    "/api/heroes/city/{city}": {
      "get": {
        "tags": ["Heroes"],
        "summary": "Buscar héroes por ciudad",
        "parameters": [
          { "name": "city", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Lista de héroes de la ciudad",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Hero" }
                }
              }
            }
          }
        }
      }
    },
    "/api/heroes/{id}/enfrentar": {
      "post": {
        "tags": ["Heroes"],
        "summary": "Enfrentar a un villano",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "villain": { "type": "string" }
                },
                "required": ["villain"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Resultado del enfrentamiento" },
          "404": { "description": "Héroe no encontrado" }
        }
      }
    },
    "/api/villanos": {
      "get": {
        "tags": ["Villanos"],
        "summary": "Obtener todos los villanos",
        "responses": {
          "200": {
            "description": "Lista de villanos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Villano" }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Villanos"],
        "summary": "Agregar un nuevo villano",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Villano" }
            }
          }
        },
        "responses": {
          "201": { "description": "Villano creado" },
          "400": { "description": "Datos inválidos" }
        }
      }
    },
    "/api/villanos/{id}": {
      "put": {
        "tags": ["Villanos"],
        "summary": "Actualizar un villano",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Villano" }
            }
          }
        },
        "responses": {
          "200": { "description": "Villano actualizado" },
          "404": { "description": "Villano no encontrado" }
        }
      },
      "delete": {
        "tags": ["Villanos"],
        "summary": "Eliminar un villano",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "responses": {
          "200": { "description": "Villano eliminado" },
          "404": { "description": "Villano no encontrado" }
        }
      }
    },
    "/api/villanos/{id}/enfrentar": {
      "post": {
        "tags": ["Villanos"],
        "summary": "Enfrentar a un héroe",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "integer" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hero": { "type": "string" }
                },
                "required": ["hero"]
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Resultado del enfrentamiento" },
          "400": { "description": "Enfrentamiento inválido" },
          "404": { "description": "Villano o héroe no encontrado" }
        }
      }
    },
    "/api/batallas/crear": {
      "post": {
        "tags": ["Batallas"],
        "summary": "Crear una nueva batalla por equipos",
        "description": "Crea una batalla entre 3 héroes y 3 villanos con sistema de turnos, IDs únicos y persistencia en MongoDB. **Requiere autenticación** - la batalla será privada para el usuario autenticado. Incluye validaciones mejoradas y mecánicas de barras de poder/defensa.",
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "equipoHeroes": {
                    "type": "array",
                    "items": { "type": "integer" },
                    "minItems": 3,
                    "maxItems": 3,
                    "description": "IDs de los 3 héroes que participarán",
                    "example": [1, 2, 3]
                  },
                  "equipoVillanos": {
                    "type": "array",
                    "items": { "type": "integer" },
                    "minItems": 3,
                    "maxItems": 3,
                    "description": "IDs de los 3 villanos que participarán",
                    "example": [1, 2, 3]
                  },
                  "iniciador": {
                    "type": "string",
                    "enum": ["heroes", "villanos"],
                    "default": "heroes",
                    "description": "Equipo que iniciará la batalla",
                    "example": "heroes"
                  },
                  "primerHeroe": {
                    "type": "integer",
                    "description": "ID del héroe que iniciará la batalla (debe estar en equipoHeroes)",
                    "example": 1
                  },
                  "primerVillano": {
                    "type": "integer",
                    "description": "ID del villano que iniciará la batalla (debe estar en equipoVillanos)",
                    "example": 1
                  }
                },
                "required": ["equipoHeroes", "equipoVillanos"],
                "example": {
                  "equipoHeroes": [1, 2, 3],
                  "equipoVillanos": [1, 2, 3],
                  "iniciador": "heroes",
                  "primerHeroe": 1,
                  "primerVillano": 1
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Batalla creada exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BatallaResponse" }
              }
            }
          },
          "400": {
            "description": "Datos inválidos",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/batallas/{batallaId}/iniciar": {
      "post": {
        "tags": ["Batallas"],
        "summary": "Iniciar una batalla",
        "description": "Cambia el estado de la batalla de 'iniciando' a 'en_curso'",
        "parameters": [
          { "name": "batallaId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Batalla iniciada",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BatallaResponse" }
              }
            }
          },
          "400": {
            "description": "Error al iniciar batalla",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/batallas/{batallaId}/atacar": {
      "post": {
        "tags": ["Batallas"],
        "summary": "Realizar un ataque",
        "description": "Realiza un ataque usando IDs únicos (H1, V2, etc.). Incluye validaciones para evitar ataques a personajes eliminados y actualiza las barras de poder/defensa. Los cambios se guardan automáticamente en MongoDB.",
        "parameters": [
          { "name": "batallaId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "atacanteId": {
                    "type": "string",
                    "description": "ID único del atacante (ej: H1, V2)",
                    "example": "H1"
                  },
                  "objetivoId": {
                    "type": "string",
                    "description": "ID único del objetivo (ej: V1, H2)",
                    "example": "V2"
                  },
                  "tipoAtaque": {
                    "type": "string",
                    "enum": ["basico", "especial", "critico"],
                    "description": "Tipo de ataque a realizar"
                  }
                },
                "required": ["atacanteId", "objetivoId", "tipoAtaque"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ataque realizado exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AtaqueResponse" }
              }
            }
          },
          "400": {
            "description": "Error en el ataque",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/batallas/{batallaId}/usar-habilidad": {
      "post": {
        "tags": ["Batallas"],
        "summary": "Usar habilidad especial",
        "description": "Permite a un personaje usar su habilidad especial única. Cada personaje tiene una habilidad diferente con cooldown de 3 turnos.",
        "parameters": [
          { "name": "batallaId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "personajeId": {
                    "type": "string",
                    "description": "ID único del personaje que usa la habilidad (ej: H1, V2)",
                    "example": "H1"
                  },
                  "objetivoId": {
                    "type": "string",
                    "description": "ID único del objetivo (opcional, depende de la habilidad)",
                    "example": "V1"
                  }
                },
                "required": ["personajeId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Habilidad especial usada exitosamente",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HabilidadResponse" }
              }
            }
          },
          "400": {
            "description": "Error al usar habilidad",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/batallas/{batallaId}/info": {
      "get": {
        "tags": ["Batallas"],
        "summary": "Obtener información detallada de batalla",
        "description": "Obtiene información detallada incluyendo IDs únicos, personajes atacantes y objetivos",
        "parameters": [
          { "name": "batallaId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Información detallada de la batalla",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BatallaInfoResponse" }
              }
            }
          },
          "404": {
            "description": "Batalla no encontrada",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/batallas/{batallaId}/estado": {
      "get": {
        "tags": ["Batallas"],
        "summary": "Obtener estado de batalla",
        "description": "Obtiene el estado actual de la batalla",
        "parameters": [
          { "name": "batallaId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": {
            "description": "Estado de la batalla",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BatallaResponse" }
              }
            }
          },
          "404": {
            "description": "Batalla no encontrada",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/batallas/activas": {
      "get": {
        "tags": ["Batallas"],
        "summary": "Obtener batallas activas del usuario",
        "description": "Lista todas las batallas que están en curso **del usuario autenticado**. Solo ve sus propias batallas.",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Lista de batallas activas",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BatallasActivasResponse" }
              }
            }
          }
        }
      }
    },
    "/api/batallas/historial": {
      "get": {
        "tags": ["Batallas"],
        "summary": "Obtener historial de batallas del usuario",
        "description": "Lista todas las batallas finalizadas **del usuario autenticado**. Solo ve sus propias batallas.",
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "Historial de batallas",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HistorialResponse" }
              }
            }
          }
        }
      }
    },
    "/api/batallas/estadisticas": {
      "get": {
        "tags": ["Batallas"],
        "summary": "Obtener estadísticas de batallas",
        "description": "Obtiene estadísticas generales de todas las batallas",
        "responses": {
          "200": {
            "description": "Estadísticas de batallas",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/EstadisticasResponse" }
              }
            }
          }
        }
      }
    },
    "/api/batallas/simular": {
      "post": {
        "tags": ["Batallas"],
        "summary": "Simular batalla completa",
        "description": "Crea y simula una batalla completa automáticamente",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "equipoHeroes": {
                    "type": "array",
                    "items": { "type": "integer" },
                    "minItems": 3,
                    "maxItems": 3
                  },
                  "equipoVillanos": {
                    "type": "array",
                    "items": { "type": "integer" },
                    "minItems": 3,
                    "maxItems": 3
                  },
                  "iniciador": {
                    "type": "string",
                    "enum": ["heroes", "villanos"],
                    "default": "heroes"
                  },
                  "primerHeroe": {
                    "type": "integer"
                  },
                  "primerVillano": {
                    "type": "integer"
                  }
                },
                "required": ["equipoHeroes", "equipoVillanos"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batalla simulada completada",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/SimulacionResponse" }
              }
            }
          },
          "400": {
            "description": "Error en la simulación",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          }
        }
      }
    },
    "/api/batallas/probar": {
      "post": {
        "tags": ["Batallas"],
        "summary": "Probar sistema",
        "description": "Ejecuta pruebas automáticas del sistema",
        "responses": {
          "200": {
            "description": "Pruebas completadas",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/PruebaResponse" }
              }
            }
          }
        }
      }
    },
    "/api/enfrentamientos": {
      "get": {
        "tags": ["Enfrentamientos"],
        "summary": "Obtener historial de enfrentamientos",
        "description": "Devuelve la lista de todos los enfrentamientos realizados, incluyendo el ganador de cada pelea.",
        "responses": {
          "200": {
            "description": "Lista de enfrentamientos",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "fecha": { "type": "string", "format": "date-time" },
                      "heroe": { "$ref": "#/components/schemas/Hero" },
                      "villano": { "$ref": "#/components/schemas/Villano" },
                      "ganador": { "type": "string" },
                      "perdedor": { "type": "string" },
                      "iniciadoPor": { "type": "string" },
                      "retador": { "type": "string" }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Pega solo el token JWT (sin 'Bearer'). El sistema lo agregará automáticamente."
      }
    },
    "schemas": {
      "Hero": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "alias": { "type": "string" },
          "city": { "type": "string" },
          "team": { "type": "string" }
        },
        "required": ["name", "alias"]
      },
      "Villano": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "name": { "type": "string" },
          "alias": { "type": "string" },
          "city": { "type": "string" },
          "team": { "type": "string" }
        },
        "required": ["name", "alias"]
      },
      "PersonajeBatalla": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "idUnico": { "type": "string" },
          "alias": { "type": "string" },
          "vida": { "type": "integer" },
          "activo": { "type": "boolean" },
          "vivo": { "type": "boolean" }
        }
      },
      "EquipoBatalla": {
        "type": "object",
        "properties": {
          "nombre": { "type": "string" },
          "personajes": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/PersonajeBatalla" }
          }
        }
      },
      "BatallaResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "batalla": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "estado": { "type": "string", "enum": ["iniciando", "en_curso", "finalizada"] },
              "ronda": { "type": "integer" },
              "turno": { "type": "string", "enum": ["heroes", "villanos"] },
              "ganador": { "type": "string", "nullable": true },
              "personajeActual": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "idUnico": { "type": "string" },
                  "alias": { "type": "string" },
                  "equipo": { "type": "string" }
                }
              },
              "equipoHeroes": { "$ref": "#/components/schemas/EquipoBatalla" },
              "equipoVillanos": { "$ref": "#/components/schemas/EquipoBatalla" },
              "historial": {
                "type": "array",
                "items": { "type": "object" }
              }
            }
          },
          "mensaje": { "type": "string" }
        }
      },
      "BatallaInfoResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "batalla": {
            "type": "object",
            "properties": {
              "id": { "type": "string" },
              "estado": { "type": "string" },
              "ronda": { "type": "integer" },
              "turno": { "type": "string" },
              "ganador": { "type": "string", "nullable": true },
              "personajeActual": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "idUnico": { "type": "string" },
                  "alias": { "type": "string" },
                  "equipo": { "type": "string" }
                }
              },
              "personajesAtacantes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "idUnico": { "type": "string" },
                    "alias": { "type": "string" },
                    "vida": { "type": "integer" },
                    "equipo": { "type": "string" }
                  }
                }
              },
              "personajesObjetivo": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer" },
                    "idUnico": { "type": "string" },
                    "alias": { "type": "string" },
                    "vida": { "type": "integer" },
                    "equipo": { "type": "string" }
                  }
                }
              },
              "equipoHeroes": { "$ref": "#/components/schemas/EquipoBatalla" },
              "equipoVillanos": { "$ref": "#/components/schemas/EquipoBatalla" }
            }
          },
          "mensaje": { "type": "string" }
        }
      },
      "AtaqueResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "batalla": { "$ref": "#/components/schemas/BatallaResponse" },
          "ataque": {
            "type": "object",
            "properties": {
              "atacante": { "type": "string" },
              "objetivo": { "type": "string" },
              "tipoAtaque": { "type": "string" },
              "dano": { "type": "integer" },
              "vidaRestante": { "type": "integer" },
              "eliminado": { "type": "boolean" }
            }
          },
          "mensaje": { "type": "string" }
        }
      },
      "BatallasActivasResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "batallas": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "estado": { "type": "string" },
                "ronda": { "type": "integer" },
                "turno": { "type": "string" },
                "ganador": { "type": "string", "nullable": true },
                "fecha": { "type": "string" },
                "equipoHeroes": { "$ref": "#/components/schemas/EquipoBatalla" },
                "equipoVillanos": { "$ref": "#/components/schemas/EquipoBatalla" }
              }
            }
          },
          "total": { "type": "integer" },
          "mensaje": { "type": "string" }
        }
      },
      "HistorialResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "batallas": {
            "type": "array",
            "items": { "type": "object" }
          },
          "total": { "type": "integer" },
          "mensaje": { "type": "string" }
        }
      },
      "EstadisticasResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "estadisticas": {
            "type": "object",
            "properties": {
              "totalBatallas": { "type": "integer" },
              "batallasFinalizadas": { "type": "integer" },
              "victoriasHeroes": { "type": "integer" },
              "victoriasVillanos": { "type": "integer" },
              "empates": { "type": "integer" },
              "porcentajeVictoriasHeroes": { "type": "string" },
              "porcentajeVictoriasVillanos": { "type": "string" }
            }
          },
          "mensaje": { "type": "string" }
        }
      },
      "HabilidadResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "habilidad": {
            "type": "object",
            "properties": {
              "mensaje": { "type": "string" },
              "tipo": { "type": "string" },
              "dano": { "type": "integer" },
              "vida": { "type": "integer" },
              "veneno": { "type": "boolean" }
            }
          },
          "efectos": {
            "type": "array",
            "items": { "type": "string" }
          },
          "batalla": { "$ref": "#/components/schemas/BatallaResponse" },
          "mensaje": { "type": "string" }
        }
      },
      "SimulacionResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "batalla": { "$ref": "#/components/schemas/BatallaResponse" },
          "turnosSimulados": { "type": "integer" },
          "mensaje": { "type": "string" }
        }
      },
      "PruebaResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "batalla": { "$ref": "#/components/schemas/BatallaResponse" },
          "mensaje": { "type": "string" }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "error": { "type": "string" }
        }
      },
      "AuthErrorResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": false },
          "error": { "type": "string", "example": "Token no válido o expirado" }
        }
      },
      "OwnershipErrorResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean", "example": false },
          "error": { "type": "string", "example": "No tienes permiso para acceder a esta batalla" }
        }
      }
    }
  }
}
